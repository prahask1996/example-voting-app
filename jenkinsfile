pipeline {
        agent any
        stages {
              stage('build'){
                    tools{
                        jdk 'jdk8'
                        maven 'apache-maven-3.6.3'
                    }
                    steps {
				                powershell 'java -version'
				                powershell 'mvn -version'
				                powershell 'mvn -f worker/pom.xml clean install'
		              	}
		}
		stage('build vote'){
			steps{
				powershell 'python --version'
				powershell 'pip install'
			}
		}
             stage('SonarQube Analysis') {
		                steps {
		                    withSonarQubeEnv(installationName: 'sonarqube', credentialsId: '01d00282-f294-4187-bc24-74e0b702a5d2') {
                        echo 'entered the Sonar steps'
		                    powershell 'cd worker'
		                    powershell 'mvn -f worker/pom.xml clean install package sonar:sonar'
                        	    }
		               }
	      }
	      stage('SonarQube Analysis-1'){
	      		 steps {
		                    withSonarQubeEnv(installationName: 'sonarqube', credentialsId: '01d00282-f294-4187-bc24-74e0b702a5d2') {
                        echo 'entered the Sonar steps'		                  
				    powershell 'cd vote'
				    powershell 'python app.py sonar:sonar'
                        	    }
		               }
	      }
	      stage('Build Container'){
         steps{
         bat '''
         echo "Remove containers if any"
         docker rm -f redis db vote result worker
         
         echo "Run redis in name redis"
         docker run -d --name=redis redis
         
         echo "Run Postgres in name db"
         docker run -d --name=db -e POSTGRES_HOST_AUTH_METHOD=trust postgres:9.4
         
         echo "Running project..."
         echo "Deploying Container Vote-app on port 5000"
         docker run -d --name=vote -p 5000:80 --link redis:redis debaduttapradhan1996/vote-app
         
         echo "Deploying Container Result-app on port 5001"
         docker run -d --name=result -p 5001:80 --link redis:redis --link db:db debaduttapradhan1996/result-app
         
         echo "Deploying Container worker-app"
         docker run -d --name=worker --link redis:redis --link db:db debaduttapradhan1996/worker-app
         '''
         }
      }
	      }
	      post {
          	always {          
            		emailext attachLog: true,
                	body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
			recipientProviders: [developers(), requestor()],
                	subject: "Jenkins Build :- ${currentBuild.currentResult}: Job ${env.JOB_NAME}" 
        	}
    	     }
}        
